umask 002

alias set=setopt
alias unset=unsetopt

unset	AUTO_CD			# cd to dirs in path if not in cdpath
set	AUTOLIST		# List choices on ambiguous completion
set	AUTOMENU		# Use menu completion on repeated tabs
unset	AUTO_PUSHD		# Make cd act like pushd
unset	BGNICE			# Don't nice background jobs
unset	BRACECCL		# allow {} as alias for []
set	CHASELINKS		# Chase symbolic links
set	CORRECT			# Spell correct commands
unset	CORRECT_ALL		# Spell correct all parameters
unset	GLOB_COMPLETE		# Menu completion for globs, too
unset	GLOB_DOTS		# Don't require leading dots to match files
set	HASH_CMDS		# Auto add things to hash table
set	HASH_DIRS		# Auto add directories to directory hash
set	HIST_IGNORE_DUPS	# Don't add dup commands to history
set	IGNOREEOF		# Require "exit"
unset	INTERACTIVE_COMMENTS	# Allow '#' at the beginning of lines
set	LIST_TYPES		# Show types of files in completion
set	LONG_LIST_JOBS		# Use long job list by default
set	MARKDIRS		# Show dir / when expanding
unset	MENU_COMPLETE		# Rotate through possible matches when ambig
set	NO_CLOBBER		# Don't overwrite existing files without !
unset	NO_EQUALS		# Don't treat lead = as special
set	NO_PROMPT_CR		# Don't print cr before prompting in editor
set	NOTIFY			# Notify on jobs immediately
set	NUMERICGLOBSORT		# Sort numeric globs numerically
unset	PATHDIRS		# Search path for X11/xinit, for example
unset	PRINT_EXIT_VALUE	# Print non-zero exit status
set	PUSHD_IGNORE_DUPS	# Don't push a directory twice
unset	PUSHD_SILENT		# Don't print stack
unset	PUSHD_TO_HOME		# pushd with no args goes home
set	RC_QUOTES		# Let '' in single quotes mean a single quote
set	SUN_KEYBOARD_HACK	# Ignore unmatched ` at end of line

unalias set unset

#
# Path variables
#

function setpath {
    # remove dups, preserving order
    newpath=()
    for dir in "$@" $path; do
        np=(${newpath:#$dir})
        if [[ -d $dir && "$newpath $dir" = "$np $dir" ]]; then
            newpath=($newpath $dir)
        fi
    done

    if [[ "$newpath" != "$path" ]]; then
	path=($newpath)
	if [[ "$ORIG_MANPATH" = "" ]]; then
	    export ORIG_MANPATH=$MANPATH
	    export ORIG_LDPATH=$LD_LIBRARY_PATH
	fi
	mpath=$ORIG_MANPATH:/usr/local/share/man:/usr/share/man
	lpath=$ORIG_LDPATH:/usr/local/share/lib:/usr/share/lib
	for elem in $path; do
	    if [[ $elem != . ]]; then
		m=${elem:h}/man
		if [[ $m != $elem && -d $m ]]; then
		    mpath="$mpath:$m"
		fi
		l=$elem:h/lib
		if [[ "$l" != $elem && -d "$l" ]]; then
		    lpath="$lpath:$l"
		fi
	    fi
	done
	export MANPATH=$mpath
	# Commented this out because Apple's stuff kept saying it was ignoring
	# it in setuid programs. I don't think I'm using it, so this gets rid
	# of the warning. But if I *do* need it, I'll have to put it back.
	#export LD_LIBRARY_PATH=$lpath
	export LD_RUN_PATH=$lpath
    fi
}

export X11HOME=/usr/X11R6
export X11R6HOME=/usr/X11R6
export EDITOR=vi
export ENSCRIPT='-fTimes-Roman10'
export PAGER=less
export CVS_RSH=ssh
export RSYNC_RSH=ssh
export QTDIR=/opt/local/lib/qt3

if (( ${+JAVA_HOME} + ${+JAVA_HOME_DONE} == 0 )); then
    if [[ -x /usr/libexec/java_home ]]; then
	JAVA_HOME=`/usr/libexec/java_home`
    else
	for f in  \
	    /System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Home  \
	    `test -d /usr/java && ls -d /usr/java/j2* | sort -r ` \
	    /usr \
	; do
	    if [[ -d $f && -x $f/bin/java ]]; then
		JAVA_HOME=$f
		break
	    fi
	done
	test -t 2 && test -z "$JAVA_HOME" && (echo "No java found" 1>&2)
    fi
    export JAVA_HOME
    export JAVA_HOME_DONE=done
fi

export VIRTUAL_ENV_BIN=
if [[ -n $VIRTUAL_ENV ]]; then
    export VIRTUAL_ENV_BIN=$VIRTUAL_ENV/bin
fi

setpath . ~/bin $VIRTUAL_ENV_BIN /Library/Frameworks/Python.framework/Versions/2.7/bin /Developer/usr/bin /usr/X11R6/bin $JAVA_HOME/bin $C3HOME/bin $M2_HOME/bin /sbin /usr/sbin /usr/local/bin /usr/local/sbin /usr/local/ImageMagick/bin /opt/local/bin /opt/local/sbin ~/iRODS.merge/clients/icommands/bin /usr/local/src/iRODS/clients/icommands/bin

export NETHACKOPTIONS='reserved:u-unicorn/t-touchstone/k-key/k-credit/k-lock pick/k-osaku/f-camera/e-pick-axe/e-mattock/e-broad pick/s-sack/s-bag/b-blindfold/c-stethoscope/l-lamp/l-lantern/l-candle,name:BlueMeanie,autopickup,pickup_types:$")[?+!=/,hilite_pet,showexp,dogname:Jazz,catname:Shamus,horsename:Shadowfax,fruit:Beatle,disclose:ia,lit_corridor,!news,time,perm_invent,eight_bit_tty,!help,pushweapon,!legacy,dungeon=\ |--------||.-|++¶¥¸°#<>«»º±\\¬{}÷£¬¬##·©},objects=])[="(%\!?§/$*`0_.'

export ROGUEOPTS='passgo,fruit=apple,noseefloor,inven=o'

export VISUAL=vi

unlimit

alias hi=history
alias z=suspend
alias pd=pushd
alias po=popd
alias beep='echo -n '
alias bigbeep='beep ; test -z "$DISPLAY" || xclock -geom 500x500+0+0'
alias tell=rcstell
alias rs=". ~/.zshenv ; . ~/.zshrc ; . ~/.zlogin"
alias ant='/usr/local/ant/bin/ant'
alias activate='. bin/activate ; rs'

#Some systems alias this to color stuff, and yuck, so no
alias ls >/dev/null && unalias ls

function er
{
    if [[ x$1 = x-c ]]; then
	shift
	for f in `ereg | error -n |& sed -n -e '/^File "/{' -e 's/File "//' -e 's/".*//p' -e '}' ` ; do
	    test -w $f || cco -nc $f
	done
    fi
    ereg | error -v
}

function _setl
{
    cmd=$1 ; shift

    # gather up options to pass on to grep
    # not using getopts because that breaks things apart
    # making '-m10' into '-m -1 -0', and it also will break
    # options like '--text'
    # This won't handle the legal '-m 10', because '10' will
    # be interpreted as the pattern, but this is hard to fix and
    # easy for the user to work around (just use '-m10')
    opts=()
    while true; do
	case "$1" in
	  -*)
	    opts+=("$1")
	    shift
	    ;;

	  *)
	    break
	    ;;
	esac;
    done

    pat="$1"
    shift
    if [[ ! -n $pat || ! -n "$*" ]]; then
	echo usage: $cmd pattern file ... 1>&2
	return 1
    fi
    l=(`echo "$@" | sed -e 's/ /\\ /g' | xargs egrep -Hsl "$opts[@]" "$pat" 2>/dev/null | tr '\012' ' '`)
    if [[ x"$l" != x ]]; then
	echo "$l[@]"
    else
	echo '"'"$pat"'"' not found 1>&2
	return 1
    fi
}

function setl
{
    l=(`_setl setl "$@"`)
    if [[ $#l = 0 ]]; then
	return 1
    else
	# I don't know why I have to do the thing with COLUMNS here but I do
	# otherwise it uses the default of 80
	cnt=`COLUMNS=$COLUMNS ls -Cq "$l[@]" | wc -l`
	if [[ $cnt -gt 20 ]]; then
	    ls -m "$l[@]"
	else
	    ls "$l[@]"
	fi
    fi
}

function vl
{
    l=(`_setl vl "$@"`)
    if [[ $#l = 0 ]]; then
	return 1
    fi

    vargs=()
    before=
    after=
    while getopts ':iw' opt; do
        case $opt in
	  i) vargs+=('+set ic') ;;
	  w) before='\<' ; after='\>' ;;
	esac
    done;
    shift `expr $OPTIND - 1`
    pat="$1"
    echo vi $vargs +/"$before$pat$after" "$l[@]"
    vi $vargs +/"$before$pat$after" "$l[@]"
}

realmake=`(unfunction make 2>/dev/null; which make)`

function make
{
    if test -f GNUmakefile; then
	gmake "$@";
    else
	case $PWD in
	  /vob/java_prog*)	$realmake "$@";;
	  /vob/*)		cmake "$@";;
	  *)			$realmake "$@";;
	esac
    fi
}

function ma
{
    make $* |& tee k
    # hack: For some reason, subscripting into pipescript just doesn't work
    x=`echo $pipestatus | sed -e's/ .*//'`
    beep
    return $x
}

function md
{
    make $* >&! k &
}

function domain_source
{
    local domains=`hostname -f`
    if [[ -z "$domains" ]]; then
    	return
    fi
    local -a parts
    parts=(${(s:.:)domains})
    local cur
    for p in ${(aO)parts}; do
    	if [[ -z "$cur" ]]; then
	    cur=$p
	else
	    cur=$p.$cur
	fi
	f=$1.$cur
	test -f $f && echo . $f && . $f
    done
}

domain_source ~/.zshenv

XTERM=/usr/bin/X11/xterm

export GNU_SECURE=~/.rhosts

limit coredumpsize 64k

export VIRTUAL_ENV_DISABLE_PROMPT=yes

export ANT_HOME=/usr/local/ant
export JINI_HOME=/usr/local/jini
